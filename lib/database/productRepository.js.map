{"version":3,"file":"productRepository.js","names":["_writeToFile","_interopRequireDefault","require","_pickByFields","obj","__esModule","default","products","getAll","limit","sort","productList","a","b","Date","createdAt","slice","parseInt","getOne","id","fields","product","find","fieldArray","split","pickByFields","create","data","updatedProducts","writeToFile","update","index","findIndex","remove","splice"],"sources":["../../src/database/productRepository.js"],"sourcesContent":["import writeToFile from \"../helpers/writeToFile\";\r\nconst products = require(\"./products.json\");\r\nimport pickByFields from \"../helpers/pickByFields\";\r\n\r\nexport function getAll(limit, sort) {\r\n  //todo: chỗ này nếu mà chỉ có 1 trong 2 điều kiện thôi thì sao ? nghiên cứu tách chỗ này ra nhé , hoặc có thể nhiều hơn 2 điều kiện chẳng hạn\r\n  let productList = products;\r\n  if (sort) {\r\n    productList.sort((a, b) => {\r\n      if (sort === \"desc\") return new Date(b.createdAt) - new Date(a.createdAt);\r\n      else if (sort === \"asc\")\r\n        return new Date(a.createdAt) - new Date(b.createdAt);\r\n    });\r\n  }\r\n  if (limit) {\r\n    productList = productList.slice(0, parseInt(limit));\r\n  }\r\n  return productList;\r\n}\r\n\r\nexport function getOne(id, fields) {\r\n  //todo: chỗ này viết cho anh 1 hàm pickFields , để có thể pick những fields cần thiết thôi , tại sau này có thể mình sẽ không pick 1 số field chẳng hạn như token\r\n  const product = products.find((product) => product.id === id);\r\n  if (fields) {\r\n    const fieldArray = fields.split(\",\");\r\n    return pickByFields(product, fieldArray);\r\n  }\r\n  return product;\r\n}\r\n\r\nexport function create(data) {\r\n  const updatedProducts = [data, ...products];\r\n  writeToFile(updatedProducts);\r\n}\r\n\r\nexport function update(data) {\r\n  const index = products.findIndex((product) => product.id === data.id);\r\n  if (index !== -1) {\r\n    products[index] = data;\r\n    writeToFile(products);\r\n  }\r\n}\r\n\r\nexport function remove(id) {\r\n  const index = products.findIndex((product) => product.id === id);\r\n  if (index !== -1) {\r\n    products.splice(index, 1);\r\n    writeToFile(products);\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAmD,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AADnD,MAAMG,QAAQ,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAGpC,SAASM,MAAMA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAClC;EACA,IAAIC,WAAW,GAAGJ,QAAQ;EAC1B,IAAIG,IAAI,EAAE;IACRC,WAAW,CAACD,IAAI,CAAC,CAACE,CAAC,EAAEC,CAAC,KAAK;MACzB,IAAIH,IAAI,KAAK,MAAM,EAAE,OAAO,IAAII,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC,KACrE,IAAIL,IAAI,KAAK,KAAK,EACrB,OAAO,IAAII,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC;IACxD,CAAC,CAAC;EACJ;EACA,IAAIN,KAAK,EAAE;IACTE,WAAW,GAAGA,WAAW,CAACK,KAAK,CAAC,CAAC,EAAEC,QAAQ,CAACR,KAAK,CAAC,CAAC;EACrD;EACA,OAAOE,WAAW;AACpB;AAEO,SAASO,MAAMA,CAACC,EAAE,EAAEC,MAAM,EAAE;EACjC;EACA,MAAMC,OAAO,GAAGd,QAAQ,CAACe,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC7D,IAAIC,MAAM,EAAE;IACV,MAAMG,UAAU,GAAGH,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;IACpC,OAAO,IAAAC,qBAAY,EAACJ,OAAO,EAAEE,UAAU,CAAC;EAC1C;EACA,OAAOF,OAAO;AAChB;AAEO,SAASK,MAAMA,CAACC,IAAI,EAAE;EAC3B,MAAMC,eAAe,GAAG,CAACD,IAAI,EAAE,GAAGpB,QAAQ,CAAC;EAC3C,IAAAsB,oBAAW,EAACD,eAAe,CAAC;AAC9B;AAEO,SAASE,MAAMA,CAACH,IAAI,EAAE;EAC3B,MAAMI,KAAK,GAAGxB,QAAQ,CAACyB,SAAS,CAAEX,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKQ,IAAI,CAACR,EAAE,CAAC;EACrE,IAAIY,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBxB,QAAQ,CAACwB,KAAK,CAAC,GAAGJ,IAAI;IACtB,IAAAE,oBAAW,EAACtB,QAAQ,CAAC;EACvB;AACF;AAEO,SAAS0B,MAAMA,CAACd,EAAE,EAAE;EACzB,MAAMY,KAAK,GAAGxB,QAAQ,CAACyB,SAAS,CAAEX,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAChE,IAAIY,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBxB,QAAQ,CAAC2B,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACzB,IAAAF,oBAAW,EAACtB,QAAQ,CAAC;EACvB;AACF"}